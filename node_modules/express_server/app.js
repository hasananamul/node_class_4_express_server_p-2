var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');
var mcapi = require('./node_modules/mailchimp-api/mailchimp');

var routes = require('./routes/index');
var users = require('./routes/users');
var lists = require('./routes/lists');
var blog = require('./routes/blog');

var app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.engine('html', require('ejs').renderFile);
app.set('view engine', 'html');

// uncomment after placing your favicon in /public
//app.use(favicon(__dirname + '/public/favicon.ico'));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

 
// set MailChimp API key here
mc = new mcapi.Mailchimp('b3baf4783c8f7d37fef2b6c0cfcebea1-us10');

app.post('/lists/:id/subscribe', lists.subscribe);
app.post('/lists/604ce69ff0/subscribe', lists.subscribe);


app.use('/', routes);
app.use('/users', users);
app.use('/blog', blog);

app.use('/img',express.static(path.join(__dirname, 'public/images')));
app.use('/fonts',express.static(path.join(__dirname, 'public/fonts')));
app.use('/js',express.static(path.join(__dirname, 'public/javascripts')));
app.use('/css',express.static(path.join(__dirname, 'public/stylesheets')));
app.use('/data',express.static(path.join(__dirname, 'public/data')));

//---Start listening
var port = 80;
app.listen(port);
console.log('Webservice started on port: '+port);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
    var err = new Error('Not Found');
    err.status = 404;
    next(err);
});

// error handlers

// development error handler
// will print stacktrace
if (app.get('env') === 'development') {
    app.use(function(err, req, res, next) {
        res.status(err.status || 500);
        res.render('error', {
            message: err.message,
            error: err
        });
    });
}

// production error handler
// no stacktraces leaked to user
app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
        message: err.message,
        error: {}
    });
});


module.exports = app;
